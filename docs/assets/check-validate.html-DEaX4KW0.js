import{_ as n,c as s,o as a,a as e}from"./app-Arw_Msp4.js";const t={},p=e(`<h3 id="手机号校验" tabindex="-1"><a class="header-anchor" href="#手机号校验"><span>手机号校验</span></a></h3><blockquote><p>export declare const mobileCheck: (value: string) =&gt; boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>mobileCheck</code></p><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> mobileCheck <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&#39;15512666996&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">mobileCheck</span><span class="token punctuation">(</span><span class="token string">&#39;369&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="类型判断字符是不是纯数值" tabindex="-1"><a class="header-anchor" href="#类型判断字符是不是纯数值"><span>类型判断字符是不是纯数值</span></a></h3><blockquote><p>export declare function isNumber(value: string): boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>isNumber</code></p><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> isNumber <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token string">&#39;a123&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断字符是不是-空对象" tabindex="-1"><a class="header-anchor" href="#判断字符是不是-空对象"><span>判断字符是不是 空对象</span></a></h3><blockquote><p>export declare function isNullObject(value: Object): boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>isNullObject</code></p><p><strong>参数</strong></p><p><code>Object</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> isNullObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">isNullObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">isNullObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="身份证校验" tabindex="-1"><a class="header-anchor" href="#身份证校验"><span>身份证校验</span></a></h3><blockquote><p>export declare const idCardCheck: (value: string) =&gt; boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>idCardCheck</code></p><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> idCardCheck <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">idCardCheck</span><span class="token punctuation">(</span><span class="token string">&#39;正确身份证号&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">idCardCheck</span><span class="token punctuation">(</span><span class="token string">&#39;369&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="邮箱校验" tabindex="-1"><a class="header-anchor" href="#邮箱校验"><span>邮箱校验</span></a></h3><blockquote><p>export declare const emailCheck: (value: string) =&gt; boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>emailCheck</code></p><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> emailCheck <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">emailCheck</span><span class="token punctuation">(</span><span class="token string">&#39;26666662@qq.com&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">emailCheck</span><span class="token punctuation">(</span><span class="token string">&#39;1315&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是浏览器内核" tabindex="-1"><a class="header-anchor" href="#判断是浏览器内核"><span>判断是浏览器内核*</span></a></h3><blockquote><p>export declare const checkBrowser: () =&gt; string;</p></blockquote><p><strong>方法名</strong></p><p><code>checkBrowser</code></p><p><strong>值</strong></p><p><code>IE</code> <code>opera</code> <code>苹果</code> <code>谷歌</code> <code>火狐</code></p><p><strong>参数</strong></p><p>无</p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> checkBrowser <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">checkBrowser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//返回字符型 IE opera 苹果 谷歌 火狐</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是大写字母" tabindex="-1"><a class="header-anchor" href="#判断是否是大写字母"><span>判断是否是大写字母</span></a></h3><blockquote><p>export declare const checkCapitalLetter: (data: string) =&gt; boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>checkCapitalLetter</code></p><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> checkCapitalLetter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">checkCapitalLetter</span><span class="token punctuation">(</span><span class="token string">&#39;10086&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkCapitalLetter</span><span class="token punctuation">(</span><span class="token string">&#39;AA11&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkCapitalLetter</span><span class="token punctuation">(</span><span class="token string">&#39;aa11&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkCapitalLetter</span><span class="token punctuation">(</span><span class="token string">&#39;aa&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkCapitalLetter</span><span class="token punctuation">(</span><span class="token string">&#39;AA&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">checkCapitalLetter</span><span class="token punctuation">(</span><span class="token string">&#39;AAbb&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkCapitalLetter</span><span class="token punctuation">(</span><span class="token string">&#39;AAbb11&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断全部是小写字母" tabindex="-1"><a class="header-anchor" href="#判断全部是小写字母"><span>判断全部是小写字母</span></a></h3><blockquote><p>export declare const checkLowercaseLetter: (data: string) =&gt; boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>checkLowercaseLetter</code></p><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> checkLowercaseLetter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">checkLowercaseLetter</span><span class="token punctuation">(</span><span class="token string">&#39;10086&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkLowercaseLetter</span><span class="token punctuation">(</span><span class="token string">&#39;AA11&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkLowercaseLetter</span><span class="token punctuation">(</span><span class="token string">&#39;aa11&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkLowercaseLetter</span><span class="token punctuation">(</span><span class="token string">&#39;aa&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">checkLowercaseLetter</span><span class="token punctuation">(</span><span class="token string">&#39;AA&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkLowercaseLetter</span><span class="token punctuation">(</span><span class="token string">&#39;AAbb&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkLowercaseLetter</span><span class="token punctuation">(</span><span class="token string">&#39;AAbb11&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是中文" tabindex="-1"><a class="header-anchor" href="#判断是否是中文"><span>判断是否是中文</span></a></h3><blockquote><p>export declare const checkChinese: (data: string) =&gt; boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>checkChinese</code></p><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> checkChinese <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">checkChinese</span><span class="token punctuation">(</span><span class="token string">&#39;10086&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkChinese</span><span class="token punctuation">(</span><span class="token string">&#39;袁果锅&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">checkChinese</span><span class="token punctuation">(</span><span class="token string">&#39;袁Guoguo&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是中文-数字或字母" tabindex="-1"><a class="header-anchor" href="#判断是否是中文-数字或字母"><span>判断是否是中文，数字或字母</span></a></h3><blockquote><p>export declare const checkChineseNumberLettter: (data: string) =&gt; boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>checkChineseNumberLettter</code></p><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> checkChineseNumberLettter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">checkChineseNumberLettter</span><span class="token punctuation">(</span><span class="token string">&#39;10086&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">checkChineseNumberLettter</span><span class="token punctuation">(</span><span class="token string">&#39;袁果锅&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">checkChineseNumberLettter</span><span class="token punctuation">(</span><span class="token string">&#39;袁Guoguo&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">checkChineseNumberLettter</span><span class="token punctuation">(</span><span class="token string">&#39;10086@qq.com&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是终端类型-值有-ios-android-ipad" tabindex="-1"><a class="header-anchor" href="#判断是终端类型-值有-ios-android-ipad"><span>判断是终端类型,值有 ios,android,iPad</span></a></h3><blockquote><p>export declare const checkIosAndroidIpad: () =&gt; string;</p></blockquote><p><strong>方法名</strong></p><p><code>checkIosAndroidIpad</code></p><p><strong>值</strong></p><p>ios android iPad</p><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> checkIosAndroidIpad <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">checkIosAndroidIpad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//返回字符型 ios | android | iPad</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是字母" tabindex="-1"><a class="header-anchor" href="#判断是否是字母"><span>判断是否是字母</span></a></h3><blockquote><p>export declare const checkLetter: (data: any) =&gt; boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>checkLetter</code></p><p><strong>参数</strong></p><p><code>data</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> checkLetter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">checkLetter</span><span class="token punctuation">(</span><span class="token string">&#39;10086&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkLetter</span><span class="token punctuation">(</span><span class="token string">&#39;袁果锅&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkLetter</span><span class="token punctuation">(</span><span class="token string">&#39;袁Guoguo&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkLetter</span><span class="token punctuation">(</span><span class="token string">&#39;YuanGuoGuo&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">checkLetter</span><span class="token punctuation">(</span><span class="token string">&#39;10086@qq.com&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkLetter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;袁果锅&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkLetter</span><span class="token punctuation">(</span><span class="token number">10086</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是数字" tabindex="-1"><a class="header-anchor" href="#判断是否是数字"><span>判断是否是数字</span></a></h3><blockquote><p>export declare const checkNum: (data: any) =&gt; boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>checkNum</code></p><p><strong>参数</strong></p><p><code>data</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> checkNum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">checkNum</span><span class="token punctuation">(</span><span class="token string">&#39;10086&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">checkNum</span><span class="token punctuation">(</span><span class="token string">&#39;袁果锅&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkNum</span><span class="token punctuation">(</span><span class="token string">&#39;袁Guoguo&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkNum</span><span class="token punctuation">(</span><span class="token string">&#39;YuanGuoGuo&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkNum</span><span class="token punctuation">(</span><span class="token string">&#39;10086@qq.com&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkNum</span><span class="token punctuation">(</span><span class="token number">10086</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是字母或数字" tabindex="-1"><a class="header-anchor" href="#判断是否是字母或数字"><span>判断是否是字母或数字</span></a></h3><blockquote><p>export declare const checkNumOrLetter: (data: string) =&gt; boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>checkNumOrLetter</code></p><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> checkNumOrLetter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">checkNumOrLetter</span><span class="token punctuation">(</span><span class="token string">&#39;10086&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">checkNumOrLetter</span><span class="token punctuation">(</span><span class="token string">&#39;袁果锅&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkNumOrLetter</span><span class="token punctuation">(</span><span class="token string">&#39;袁Guoguo&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkNumOrLetter</span><span class="token punctuation">(</span><span class="token string">&#39;YuanGuoGuo&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">checkNumOrLetter</span><span class="token punctuation">(</span><span class="token string">&#39;10086@qq.com&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"><span class="token function">checkNumOrLetter</span><span class="token punctuation">(</span><span class="token number">10086</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="判断是否是正确的网址" tabindex="-1"><a class="header-anchor" href="#判断是否是正确的网址"><span>判断是否是正确的网址</span></a></h3><blockquote><p>export declare const checkUrl: (url: string) =&gt; boolean;</p></blockquote><p><strong>方法名</strong></p><p><code>checkUrl</code></p><p><strong>参数</strong></p><p><code>String</code></p><p><strong>返回</strong></p><p><code>Boolean</code></p><p><strong>例子</strong></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> checkUrl <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@shixinde/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">checkUrl</span><span class="token punctuation">(</span><span class="token string">&#39;www.baidu.com&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 true</span></span>
<span class="line"><span class="token function">checkUrl</span><span class="token punctuation">(</span><span class="token string">&#39;yuanguoguo&#39;</span><span class="token punctuation">)</span> <span class="token comment">//返回布尔型 false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,154),c=[p];function o(l,i){return a(),s("div",null,c)}const u=n(t,[["render",o],["__file","check-validate.html.vue"]]),d=JSON.parse('{"path":"/theme-reco/check-validate.html","title":"校验规则","lang":"zh-CN","frontmatter":{"title":"校验规则","date":"2024-7-10"},"headers":[{"level":3,"title":"手机号校验","slug":"手机号校验","link":"#手机号校验","children":[]},{"level":3,"title":"类型判断字符是不是纯数值","slug":"类型判断字符是不是纯数值","link":"#类型判断字符是不是纯数值","children":[]},{"level":3,"title":"判断字符是不是 空对象","slug":"判断字符是不是-空对象","link":"#判断字符是不是-空对象","children":[]},{"level":3,"title":"身份证校验","slug":"身份证校验","link":"#身份证校验","children":[]},{"level":3,"title":"邮箱校验","slug":"邮箱校验","link":"#邮箱校验","children":[]},{"level":3,"title":"判断是浏览器内核*","slug":"判断是浏览器内核","link":"#判断是浏览器内核","children":[]},{"level":3,"title":"判断是否是大写字母","slug":"判断是否是大写字母","link":"#判断是否是大写字母","children":[]},{"level":3,"title":"判断全部是小写字母","slug":"判断全部是小写字母","link":"#判断全部是小写字母","children":[]},{"level":3,"title":"判断是否是中文","slug":"判断是否是中文","link":"#判断是否是中文","children":[]},{"level":3,"title":"判断是否是中文，数字或字母","slug":"判断是否是中文-数字或字母","link":"#判断是否是中文-数字或字母","children":[]},{"level":3,"title":"判断是终端类型,值有 ios,android,iPad","slug":"判断是终端类型-值有-ios-android-ipad","link":"#判断是终端类型-值有-ios-android-ipad","children":[]},{"level":3,"title":"判断是否是字母","slug":"判断是否是字母","link":"#判断是否是字母","children":[]},{"level":3,"title":"判断是否是数字","slug":"判断是否是数字","link":"#判断是否是数字","children":[]},{"level":3,"title":"判断是否是字母或数字","slug":"判断是否是字母或数字","link":"#判断是否是字母或数字","children":[]},{"level":3,"title":"判断是否是正确的网址","slug":"判断是否是正确的网址","link":"#判断是否是正确的网址","children":[]}],"git":{"updatedTime":1720839392000,"contributors":[{"name":"袁果锅","email":"2914310412@qq.com","commits":2}]},"filePathRelative":"theme-reco/check-validate.md","excerpt":"<h3>手机号校验</h3>\\n<blockquote>\\n<p>export declare const mobileCheck: (value: string) =&gt; boolean;</p>\\n</blockquote>\\n<p><strong>方法名</strong></p>\\n<p><code>mobileCheck</code></p>\\n<p><strong>参数</strong></p>\\n<p><code>String</code></p>\\n<p><strong>返回</strong></p>\\n<p><code>Boolean</code></p>\\n<p><strong>例子</strong></p>"}');export{u as comp,d as data};
