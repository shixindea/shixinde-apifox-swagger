import comp from "/Users/guoguo/code/my-project/shixinde-apifox-swagger/docs-vuepress/.vuepress/.temp/pages/typescript.html.vue"
const data = JSON.parse("{\"path\":\"/typescript.html\",\"title\":\"TypeScript 类型安全工具\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"核心概念\",\"slug\":\"核心概念\",\"link\":\"#核心概念\",\"children\":[{\"level\":3,\"title\":\"类型生成流程\",\"slug\":\"类型生成流程\",\"link\":\"#类型生成流程\",\"children\":[]},{\"level\":3,\"title\":\"核心类型\",\"slug\":\"核心类型\",\"link\":\"#核心类型\",\"children\":[]}]},{\"level\":2,\"title\":\"快速开始\",\"slug\":\"快速开始\",\"link\":\"#快速开始\",\"children\":[{\"level\":3,\"title\":\"1. 生成类型文件\",\"slug\":\"_1-生成类型文件\",\"link\":\"#_1-生成类型文件\",\"children\":[]},{\"level\":3,\"title\":\"2. 基本使用\",\"slug\":\"_2-基本使用\",\"link\":\"#_2-基本使用\",\"children\":[]}]},{\"level\":2,\"title\":\"详细使用指南\",\"slug\":\"详细使用指南\",\"link\":\"#详细使用指南\",\"children\":[{\"level\":3,\"title\":\"1. 类型定义\",\"slug\":\"_1-类型定义\",\"link\":\"#_1-类型定义\",\"children\":[]},{\"level\":3,\"title\":\"2. 运行时 URL 构建\",\"slug\":\"_2-运行时-url-构建\",\"link\":\"#_2-运行时-url-构建\",\"children\":[]},{\"level\":3,\"title\":\"3. 创建类型安全的 API 客户端\",\"slug\":\"_3-创建类型安全的-api-客户端\",\"link\":\"#_3-创建类型安全的-api-客户端\",\"children\":[]},{\"level\":3,\"title\":\"4. React Hook 集成\",\"slug\":\"_4-react-hook-集成\",\"link\":\"#_4-react-hook-集成\",\"children\":[]},{\"level\":3,\"title\":\"5. 多模块类型管理\",\"slug\":\"_5-多模块类型管理\",\"link\":\"#_5-多模块类型管理\",\"children\":[]},{\"level\":3,\"title\":\"6. 高级用法\",\"slug\":\"_6-高级用法\",\"link\":\"#_6-高级用法\",\"children\":[]}]},{\"level\":2,\"title\":\"常见问题和解决方案\",\"slug\":\"常见问题和解决方案\",\"link\":\"#常见问题和解决方案\",\"children\":[{\"level\":3,\"title\":\"1. \\\"类型不能赋给类型 never 的参数\\\" 错误\",\"slug\":\"_1-类型不能赋给类型-never-的参数-错误\",\"link\":\"#_1-类型不能赋给类型-never-的参数-错误\",\"children\":[]},{\"level\":3,\"title\":\"2. 类型推断错误\",\"slug\":\"_2-类型推断错误\",\"link\":\"#_2-类型推断错误\",\"children\":[]},{\"level\":3,\"title\":\"3. 路径参数类型问题\",\"slug\":\"_3-路径参数类型问题\",\"link\":\"#_3-路径参数类型问题\",\"children\":[]}]},{\"level\":2,\"title\":\"最佳实践\",\"slug\":\"最佳实践\",\"link\":\"#最佳实践\",\"children\":[{\"level\":3,\"title\":\"1. 项目结构\",\"slug\":\"_1-项目结构\",\"link\":\"#_1-项目结构\",\"children\":[]},{\"level\":3,\"title\":\"2. 类型命名约定\",\"slug\":\"_2-类型命名约定\",\"link\":\"#_2-类型命名约定\",\"children\":[]},{\"level\":3,\"title\":\"3. 错误处理\",\"slug\":\"_3-错误处理\",\"link\":\"#_3-错误处理\",\"children\":[]},{\"level\":3,\"title\":\"4. 自动更新\",\"slug\":\"_4-自动更新\",\"link\":\"#_4-自动更新\",\"children\":[]}]},{\"level\":2,\"title\":\"下一步\",\"slug\":\"下一步\",\"link\":\"#下一步\",\"children\":[]}],\"git\":{\"updatedTime\":null,\"contributors\":[]},\"filePathRelative\":\"typescript.md\",\"excerpt\":\"\\n<p>@shixinde/apifox-swagger 提供了强大的 TypeScript 类型安全工具，让你可以在编译时就发现 API 调用错误，享受完整的类型提示和自动补全。</p>\\n<h2>核心概念</h2>\\n<h3>类型生成流程</h3>\\n<ol>\\n<li><strong>Swagger 文档</strong> → 2. <strong>TypeScript 类型定义</strong> → 3. <strong>类型安全的 API 工具</strong></li>\\n</ol>\\n<div class=\\\"language-mermaid\\\" data-highlighter=\\\"prismjs\\\" data-ext=\\\"mermaid\\\" data-title=\\\"mermaid\\\"><pre class=\\\"language-mermaid\\\"><code><span class=\\\"line\\\"><span class=\\\"token keyword\\\">graph</span> LR</span>\\n<span class=\\\"line\\\">    A<span class=\\\"token text string\\\">[Apifox API]</span> <span class=\\\"token arrow operator\\\">--&gt;</span> B<span class=\\\"token text string\\\">[Swagger JSON]</span></span>\\n<span class=\\\"line\\\">    B <span class=\\\"token arrow operator\\\">--&gt;</span> C<span class=\\\"token text string\\\">[TypeScript 类型]</span></span>\\n<span class=\\\"line\\\">    C <span class=\\\"token arrow operator\\\">--&gt;</span> D<span class=\\\"token text string\\\">[类型安全工具]</span></span>\\n<span class=\\\"line\\\">    D <span class=\\\"token arrow operator\\\">--&gt;</span> E<span class=\\\"token text string\\\">[业务代码]</span></span>\\n<span class=\\\"line\\\"></span></code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
